{"ast":null,"code":"var _jsxFileName = \"/Users/failop/Documents/UF/SeniorP/project/Stock_Price_Predictor/Front_end/src/Tokens/useContext.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n\n  // User is the name of the \"data\" that gets stored in context\n  const [user, setUser] = useState({\n    name: '',\n    auth: true\n  }); // Login updates the user data with a name parameter\n\n  const login = name => {\n    setUser(user => ({\n      name: name,\n      auth: true\n    }));\n  }; // Logout updates the user data to default\n\n\n  const logout = () => {\n    setUser(user => ({\n      name: '',\n      auth: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }, this);\n};\n\n_s(UserProvider, \"cuJE9wTKFsU0aspTx8mQgM1iJPI=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/failop/Documents/UF/SeniorP/project/Stock_Price_Predictor/Front_end/src/Tokens/useContext.js"],"names":["UserProvider","children","user","setUser","useState","name","auth","login","logout"],"mappings":";;;;;AAEA,MAAMA,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,CAAhC,CAFmC,CAInC;;AACA,QAAMC,KAAK,GAAIF,IAAD,IAAU;AACtBF,IAAAA,OAAO,CAAED,IAAD,KAAW;AACjBG,MAAAA,IAAI,EAAEA,IADW;AAEjBC,MAAAA,IAAI,EAAE;AAFW,KAAX,CAAD,CAAP;AAID,GALD,CALmC,CAYnC;;;AACA,QAAME,MAAM,GAAG,MAAM;AACnBL,IAAAA,OAAO,CAAED,IAAD,KAAW;AACjBG,MAAAA,IAAI,EAAE,EADW;AAEjBC,MAAAA,IAAI,EAAE;AAFW,KAAX,CAAD,CAAP;AAID,GALD;;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA7B;AAAA,cACGP;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBH;;GAAMD,Y;;KAAAA,Y","sourcesContent":["\n\nconst UserProvider = ({ children }) => {\n    // User is the name of the \"data\" that gets stored in context\n    const [user, setUser] = useState({ name: '', auth: true });\n  \n    // Login updates the user data with a name parameter\n    const login = (name) => {\n      setUser((user) => ({\n        name: name,\n        auth: true,\n      }));\n    };\n  \n    // Logout updates the user data to default\n    const logout = () => {\n      setUser((user) => ({\n        name: '',\n        auth: false,\n      }));\n    };\n  \n    return (\n      <UserContext.Provider value={{ user, login, logout }}>\n        {children}\n      </UserContext.Provider>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}